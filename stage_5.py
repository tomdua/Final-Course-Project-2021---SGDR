# -*- coding: utf-8 -*-
"""Stage_5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-nBaZZmpnKVnIJ0dwqK2gdLWpSnMB_Oc
"""

import pandas as pd
from scipy import stats
import numpy as np
!pip install scikit_posthocs
import scikit_posthocs as sp

precision_array_basic=[]
precision_array_warm=[]
precision_array_improved = []

def read_data_friedman(path):
    precision_array_basic, precision_array_warm, precision_array_improved = split_algo(path)
    results = stats.friedmanchisquare(precision_array_basic, precision_array_warm, precision_array_improved)
    print(results)
    if results[1] < 0.05:
        return True
    return False

def split_algo(result):
        data = pd.read_csv(result)
        precision=[]
        precision_array=[]
        precision = data['Accuracy'].to_list()
        algorithm_name = data['Algorithm Name'].to_list()
        for i in range(len(precision)):
            precision_array.append(precision[i][1:len(precision[i])-1])
            if algorithm_name[i] == 'Basic':
                precision_array_basic.append(precision_array[i])
            if algorithm_name[i] == 'SGDR':
               precision_array_warm.append(precision_array[i])
            if algorithm_name[i] == 'improved':
                precision_array_improved.append(precision_array[i])
        return precision_array_basic, precision_array_warm, precision_array_improved

def hoc_test():
        data = np.array([precision_array_basic, precision_array_warm, precision_array_improved])
        datay = data.astype(np.float)
        dataT=datay.transpose()
        hoc = sp.scikit_posthocs.posthoc_nemenyi_friedman(dataT)
        print(hoc)

def stage_5():
  print('Friedman test')
  friedman = read_data_friedman("/content/data/result.csv")
  print('Hoc test')
  hoc_test()

stage_5()